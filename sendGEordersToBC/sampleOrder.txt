{
  "title": "Order Post/Put/PUTPUTgoose",
  "example": {
    //"id": 113,
    "customer_id": 0,//0 = guest order
    "date_created": GO.placedDate,
    //"date_modified": "Wed, 25 Apr 2018 20:20:25 +0000",
    //"date_shipped": "",
    //"status_id": 7,

var statuses = {

"canceled":"Cancelled",
//"delivered":
"inProgress":"Awaiting Payment"
//"partiallyDelivered":
//"partiallyReturned":
//"partiallyShipped":
"pendingShipment":"Awaiting Shipment",
//"returned":
//"shipped":"Shipped"


}

    "status": statuses[GO.status],
    "subtotal_ex_tax": "143.9500",
    "subtotal_inc_tax": "143.9500",
    "subtotal_tax": "0.0000",
    "base_shipping_cost": "0.0000",
    "shipping_cost_ex_tax": "0.0000",
    "shipping_cost_inc_tax": "0.0000",
    "shipping_cost_tax": "0.0000",
    "shipping_cost_tax_class_id": 2,
    "base_handling_cost": "0.0000",
    "handling_cost_ex_tax": "0.0000",
    "handling_cost_inc_tax": "0.0000",
    "handling_cost_tax": "0.0000",
    "handling_cost_tax_class_id": 2,
    "base_wrapping_cost": "0.0000",
    "wrapping_cost_ex_tax": "0.0000",
    "wrapping_cost_inc_tax": "0.0000",
    "wrapping_cost_tax": "0.0000",
    "wrapping_cost_tax_class_id": 3,
    "total_ex_tax": "138.9500",
    "total_inc_tax": "138.9500",
    "total_tax": "0.0000",
    "items_total": 2,
    "items_shipped": 0,
    "payment_method": "Cash on Delivery",
    "payment_provider_id": {},
    "payment_status": "",
    "refunded_amount": "0.0000",
    "order_is_digital": false,
    "store_credit_amount": "0.0000",
    "gift_certificate_amount": "0.0000",
    "ip_address": "64.183.182.114",
    "geoip_country": "United States",
    "geoip_country_iso2": "US",
    "currency_id": 1,
    "currency_code": "USD",
    "currency_exchange_rate": "1.0000000000",
    "default_currency_id": 1,
    "default_currency_code": "USD",
    "staff_notes": "",
    "customer_message": "",
    "discount_amount": "0.0000",
    "coupon_discount": "5.0000",
    "shipping_address_count": 1,
    "is_deleted": false,
    "ebay_order_id": "0",
    "cart_id": "1cf3da59-1c90-42a9-82fb-2a954743a390",
    "billing_address": {
      "first_name": "Jane",
      "last_name": "Does",
      "company": "",
      "street_1": "123 MainStreet",
      "street_2": "",
      "city": "Austin",
      "state": "Texas",
      "zip": "78751",
      "country": "United States",
      "country_iso2": "US",
      "phone": "",
      "email": "jane@email.com",
      "form_fields": []
    },
    "is_email_opt_in": false,
    "credit_card_type": {},
    "order_source": "www",
    "external_source": {},
    "products": {
      "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/products",
      "resource": "/orders/113/products"
    },
    "shipping_addresses": {
      "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/shippingaddresses",
      "resource": "/orders/113/shippingaddresses"
    },
    "coupons": {
      "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/coupons",
      "resource": "/orders/113/coupons"
    },
    "external_id": {},
    "external_merchant_id": {},
    "custom_status": "Awaiting Payment"
  },
  "type": "object",
  "description": "Products and Billing address only required for POST operation.",
  "properties": {
    "products": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "title": "Product",
            "description": "`product_options` are required if adding a product with variants.",
            "properties": {
              "product_id": {
                "type": "integer",
                "example": 4
              },
              "product_options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 456
                    },
                    "value": {
                      "type": "string",
                      "example": "789"
                    }
                  }
                }
              },
              "quantity": {
                "type": "number",
                "example": 4
              },
              "price_inc_tax": {
                "type": "number",
                "example": 55.49
              },
              "price_ex_tax": {
                "type": "number",
                "example": 55
              },
              "upc": {
                "type": "string",
                "example": "01234567890"
              },
              "variant_id": {
                "type": "integer",
                "description": "Products `variant_id`. PUT or POST. This field is not available for custom products."
              }
            },
            "required": [
              "product_id",
              "product_options",
              "quantity"
            ]
          },
          {
            "title": "Custom Product",
            "properties": {
              "name": {
                "type": "string",
                "example": "BigCommerce T-Shirt"
              },
              "quantity": {
                "type": "integer",
                "example": 5
              },
              "price_ex_tax": {
                "type": "number",
                "example": 10
              },
              "price_inc_tax": {
                "type": "number",
                "example": 10.5
              },
              "sku": {
                "type": "string",
                "example": "BLU-SMALL"
              },
              "upc": {
                "type": "string",
                "example": "01234567890"
              }
            },
            "required": [
              "name",
              "quantity",
              "price_ex_tax",
              "price_inc_tax"
            ]
          }
        ],
        "type": "object"
      }
    },
    "billing_address": {
      "title": "Billing Address",
      "type": "object",
      "description": "Required to create an order.",
      "properties": {
        "first_name": {
          "description": "",
          "example": "Jane",
          "type": "string"
        },
        "last_name": {
          "description": "",
          "example": "Doe",
          "type": "string"
        },
        "company": {
          "description": "",
          "type": "string",
          "example": "BigCommerce"
        },
        "street_1": {
          "description": "",
          "example": "123 Main Street",
          "type": "string"
        },
        "street_2": {
          "description": "",
          "type": "string"
        },
        "city": {
          "description": "",
          "example": "Austin",
          "type": "string"
        },
        "state": {
          "description": "",
          "example": "TX",
          "type": "string"
        },
        "zip": {
          "description": "",
          "example": "12345",
          "type": "string"
        },
        "country": {
          "description": "",
          "example": "United States",
          "type": "string"
        },
        "country_iso2": {
          "description": "",
          "example": "US",
          "type": "string"
        },
        "phone": {
          "description": "",
          "type": "string"
        },
        "email": {
          "description": "",
          "example": "janedoe@email.com",
          "type": "string"
        },
        "form_fields": {
          "description": "",
          "type": "array",
          "items": {
            "title": "Form Fields",
            "type": "object",
            "readOnly": true,
            "description": "Read-Only. If you have required address form fields they will need to be set as optional before creating an order via API.",
            "properties": {
              "name": {
                "description": "Name of the form field",
                "readOnly": true,
                "type": "string",
                "example": "License Id"
              },
              "value": {
                "description": "Value of the form field",
                "readOnly": true,
                "type": "string",
                "example": "123BAF"
              }
            }
          }
        }
      }
    },
    "customer_id": {
      "description": "The ID of the customer placing the order; or 0 if it was a guest order.",
      "example": 6,
      "type": "integer"
    },
    "status_id": {
      "description": "The status ID of the order.",
      "example": 11,
      "type": "integer"
    },
    "subtotal_ex_tax": {
      "description": "Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)",
      "example": "225.0000",
      "type": "string"
    },
    "subtotal_inc_tax": {
      "description": "Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)",
      "example": "225.0000",
      "type": "string"
    },
    "base_shipping_cost": {
      "description": "The value of the base shipping cost. (Float, Float-As-String, Integer)",
      "example": "0.0000",
      "type": "string"
    },
    "shipping_cost_ex_tax": {
      "description": "The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)",
      "example": "0.0000",
      "type": "string"
    },
    "shipping_cost_inc_tax": {
      "description": "The value of shipping cost, including tax. (Float, Float-As-String, Integer)",
      "example": "0.0000",
      "type": "string"
    },
    "base_handling_cost": {
      "description": "The value of the base handling cost. (Float, Float-As-String, Integer)",
      "example": "0.0000",
      "type": "string"
    },
    "handling_cost_ex_tax": {
      "description": "The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)",
      "example": "0.0000",
      "type": "string"
    },
    "handling_cost_inc_tax": {
      "description": "The value of the handling cost, including tax. (Float, Float-As-String, Integer)",
      "example": 0,
      "type": "string"
    },
    "base_wrapping_cost": {
      "description": "The value of the base wrapping cost. (Float, Float-As-String, Integer)",
      "example": 0,
      "type": "string"
    },
    "wrapping_cost_ex_tax": {
      "description": "The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)",
      "example": "0.0000",
      "type": "string"
    },
    "wrapping_cost_inc_tax": {
      "description": "The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)",
      "example": "0.0000",
      "type": "string"
    },
    "total_ex_tax": {
      "description": "Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)",
      "example": "225.0000",
      "type": "string"
    },
    "total_inc_tax": {
      "description": "Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer) ",
      "example": "225.0000",
      "type": "string"
    },
    "items_total": {
      "description": "The total number of items in the order.",
      "example": 1,
      "type": "number"
    },
    "items_shipped": {
      "description": "The number of items that have been shipped.",
      "example": 0,
      "type": "number"
    },
    "payment_method": {
      "type": "string",
      "description": "The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.",
      "enum": [
        "Credit Card",
        "Cash",
        "Test Payment Gateway",
        "Manual"
      ]
    },
    "payment_provider_id": {
      "description": "The external Transaction ID/Payment ID within this order's payment provider (if a payment provider was used).",
      "example": null,
      "type": "integer"
    },
    "refunded_amount": {
      "description": "The amount refunded from this transaction. (Float, Float-As-String, Integer)",
      "example": "0.0000",
      "type": "string"
    },
    "order_is_digital": {
      "description": "Whether this is an order for digital products.",
      "example": false,
      "type": "boolean"
    },
    "gift_certificate_amount": {
      "description": "A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)",
      "example": "0.0000",
      "type": "string"
    },
    "ip_address": {
      "description": "IP Address of the customer, if known.",
      "example": "12.345.678.910",
      "type": "string"
    },
    "geoip_country": {
      "description": "The full name of the country where the customer made the purchase, based on the IP.",
      "example": "United States",
      "type": "string"
    },
    "geoip_country_iso2": {
      "description": "The country where the customer made the purchase, in ISO2 format, based on the IP.",
      "example": "US",
      "type": "string"
    },
    "staff_notes": {
      "description": "Any additional notes for staff.",
      "example": "Send Saturday",
      "type": "string"
    },
    "customer_message": {
      "description": "Message that the customer entered (number, optiona) -o the `Order Comments` box during checkout.",
      "example": "Thank you",
      "type": "string"
    },
    "discount_amount": {
      "description": "Amount of discount for this transaction. (Float, Float-As-String, Integer)",
      "example": "0.0000",
      "type": "string"
    },
    "is_deleted": {
      "description": "Indicates whether the order was deleted (archived). Set to to true, to archive an order.",
      "example": false,
      "type": "boolean"
    },
    "is_email_opt_in": {
      "description": "Indicates whether the shopper has selected an opt-in check box (on the checkout page) to receive emails. A read-only value. Do not pass in a POST or PUT.",
      "example": false,
      "type": "boolean"
    },
    "credit_card_type": {
      "type": "integer"
    },
    "ebay_order_id": {
      "description": "If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.",
      "example": "0",
      "type": "string"
    },
    "external_source": {
      "description": "For orders submitted or modified via the API, using a PUT or POST operation, you can optionally pass in a value identifying the system used to generate the order. For example: `POS`. Otherwise, the value will be null.",
      "example": "null",
      "type": "string"
    },
    "external_id": {
      "description": "ID of the order in another system. For example, the Amazon Order ID if this is an Amazon order.This field can be updated in a /POST, but using a /PUT to update the order will return a 400 error. The field 'external_id' cannot be written to. Please remove it from your request before trying again. It can not be overwritten once set.",
      "example": null,
      "type": "integer"
    },
    "external_merchant_id": {
      "description": "Id of the external merchant.",
      "example": "null",
      "type": "string"
    },
    "channel_id": {
      "type": "integer",
      "example": 1,
      "description": "Shows where the order originated. The channel_id will default to 1. Read-Only. "
    },
    "tax_provider_id": {
      "type": "string",
      "description": "BasicTaxProvider - Tax is set to manual. \n\nAvaTaxProvider - This is for when the tax provider has been set to automatic and the order was NOT created by the API. Used for Avalara. \n\n\"\" (blank) - When the tax provider is unknown. This includes legacy orders and orders previously created via API.\nThis can be set when creating an order using a POST. \n\n",
      "enum": [
        "BasicTaxProvider",
        "AvaTaxProvider",
        ""
      ]
    },
    "date_created": {
      "type": "string",
      "description": "The date this order was created. If not specified, will default to the current time. The date should be in RFC 2822 format."
    }
  },
  "required": [
    "products",
    "billing_address"
  ]
}
